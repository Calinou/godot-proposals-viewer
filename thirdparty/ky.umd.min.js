!function(b,a){"object"==typeof exports&&"undefined"!=typeof module?module.exports=a():"function"==typeof define&&define.amd?define(a):(b=b||self).ky=a()}(this,function(){"use strict";const a={},w=a=>"undefined"!=typeof self&&self&&a in self?self:"undefined"!=typeof window&&window&&a in window?window:"undefined"!=typeof global&&global&&a in global?global:"undefined"!=typeof globalThis&&globalThis?globalThis:void 0,u=["Headers","Request","Response","ReadableStream","fetch","AbortController","FormData"];for(const b of u)Object.defineProperty(a,b,{get(){const a=w(b),c=a&&a[b];return"function"==typeof c?c.bind(a):c}});const c=a=>null!==a&&"object"==typeof a,p="function"==typeof a.AbortController,q="function"==typeof a.ReadableStream,s="function"==typeof a.FormData,n=(d,c)=>{const b=new a.Headers(d),e=c instanceof a.Headers,f=new a.Headers(c);for(const[c,a]of f)e&&"undefined"===a||void 0===a?b.delete(c):b.set(c,a);return b},g=(...d)=>{let a={},b={};for(const e of d){if(Array.isArray(e))Array.isArray(a)||(a=[]),a=[...a,...e];else if(c(e)){for(let[d,b]of Object.entries(e))c(b)&&Reflect.has(a,d)&&(b=g(a[d],b)),a={...a,[d]:b};c(e.headers)&&(b=n(b,e.headers))}a.headers=b}return a},j=["get","post","put","patch","head","delete"],v={json:"application/json",text:"text/*",formData:"multipart/form-data",arrayBuffer:"*/*",blob:"*/*"},l=[413,429,503],o=Symbol("stop");class f extends Error{constructor(a){super(a.statusText||String(0===a.status||a.status?a.status:"Unknown response error")),this.name="HTTPError",this.response=a}}class e extends Error{constructor(a){super("Request timed out"),this.name="TimeoutError",this.request=a}}const i=a=>new Promise(b=>setTimeout(b,a)),x=(b,d,c)=>new Promise((g,f)=>{const h=setTimeout(()=>{c&&c.abort(),f(new e(b))},d);a.fetch(b).then(g).catch(f).then(()=>{clearTimeout(h)})}),r=a=>j.includes(a)?a.toUpperCase():a,m={limit:2,methods:["get","put","head","delete","options","trace"],statusCodes:[408,413,429,500,502,503,504],afterStatusCodes:l},t=(a={})=>{if("number"==typeof a)return{...m,limit:a};if(a.methods&&!Array.isArray(a.methods))throw new Error("retry.methods must be an array");if(a.statusCodes&&!Array.isArray(a.statusCodes))throw new Error("retry.statusCodes must be an array");return{...m,...a,afterStatusCodes:l}},d=2147483647;class k{constructor(h,b={}){if(this._retryCount=0,this._input=h,this._options={credentials:this._input.credentials||"same-origin",...b,headers:n(this._input.headers,b.headers),hooks:g({beforeRequest:[],beforeRetry:[],afterResponse:[]},b.hooks),method:r(b.method||this._input.method),prefixUrl:String(b.prefixUrl||""),retry:t(b.retry),throwHttpErrors:!1!==b.throwHttpErrors,timeout:void 0===b.timeout?1e4:b.timeout},"string"!=typeof this._input&&!(this._input instanceof URL||this._input instanceof a.Request))throw new TypeError("`input` must be a string, URL, or Request");if(this._options.prefixUrl&&"string"==typeof this._input){if(this._input.startsWith("/"))throw new Error("`input` must not begin with a slash when using `prefixUrl`");this._options.prefixUrl.endsWith("/")||(this._options.prefixUrl+="/"),this._input=this._options.prefixUrl+this._input}if(p&&(this.abortController=new a.AbortController,this._options.signal&&this._options.signal.addEventListener("abort",()=>{this.abortController.abort()}),this._options.signal=this.abortController.signal),this.request=new a.Request(this._input,this._options),this._options.searchParams){const b=new URL(this.request.url);b.search=new URLSearchParams(this._options.searchParams),!(s&&this._options.body instanceof a.FormData||this._options.body instanceof URLSearchParams)||this._options.headers&&this._options.headers["content-type"]||this.request.headers.delete("content-type"),this.request=new a.Request(new a.Request(b,this.request),this._options)}void 0!==this._options.json&&(this._options.body=JSON.stringify(this._options.json),this.request.headers.set("content-type","application/json"),this.request=new a.Request(this.request,{body:this._options.body}));const e=async()=>{if(this._options.timeout>d)throw new RangeError(`The \`timeout\` option cannot be greater than ${d}`);await i(1);let b=await this._fetch();for(const d of this._options.hooks.afterResponse){const c=await d(this.request,this._options,b.clone());c instanceof a.Response&&(b=c)}if(!b.ok&&this._options.throwHttpErrors)throw new f(b);if(this._options.onDownloadProgress){if("function"!=typeof this._options.onDownloadProgress)throw new TypeError("The `onDownloadProgress` option must be a function");if(!q)throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");return this._stream(b.clone(),this._options.onDownloadProgress)}return b},c=this._options.retry.methods.includes(this.request.method.toLowerCase())?this._retry(e):e();for(const[a,b]of Object.entries(v))c[a]=async()=>{this.request.headers.set("accept",this.request.headers.get("accept")||b);const d=(await c).clone();return"json"===a&&204===d.status?"":d[a]()};return c}_calculateRetryDelay(a){if(this._retryCount++,this._retryCount<this._options.retry.limit&&!(a instanceof e)){if(a instanceof f){if(!this._options.retry.statusCodes.includes(a.response.status))return 0;const b=a.response.headers.get("Retry-After");if(b&&this._options.retry.afterStatusCodes.includes(a.response.status)){let a=Number(b);return Number.isNaN(a)?a=Date.parse(b)-Date.now():a*=1e3,void 0!==this._options.retry.maxRetryAfter&&a>this._options.retry.maxRetryAfter?0:a}if(413===a.response.status)return 0}return.3*2**(this._retryCount-1)*1e3}return 0}async _retry(a){try{return await a()}catch(b){const c=Math.min(this._calculateRetryDelay(b),d);if(0!==c&&this._retryCount>0){await i(c);for(const a of this._options.hooks.beforeRetry)if(await a({request:this.request,options:this._options,error:b,response:b.response.clone(),retryCount:this._retryCount})===o)return;return this._retry(a)}if(this._options.throwHttpErrors)throw b}}async _fetch(){for(const b of this._options.hooks.beforeRequest){const a=await b(this.request,this._options);if(a instanceof Request){this.request=a;break}if(a instanceof Response)return a}return!1===this._options.timeout?a.fetch(this.request.clone()):x(this.request.clone(),this._options.timeout,this.abortController)}_stream(e,b){const c=Number(e.headers.get("content-length"))||0;let d=0;return new a.Response(new a.ReadableStream({start(a){const f=e.body.getReader();b&&b({percent:0,transferredBytes:0,totalBytes:c},new Uint8Array),async function g(){const{done:h,value:e}=await f.read();h?a.close():(b&&(d+=e.byteLength,b({percent:0===c?0:d/c,transferredBytes:d,totalBytes:c},e)),a.enqueue(e),g())}()}}))}}const b=(...a)=>{for(const b of a)if((!c(b)||Array.isArray(b))&&void 0!==b)throw new TypeError("The `options` argument must be an object");return g({},...a)},h=c=>{const a=(a,d)=>new k(a,b(c,d));for(const d of j)a[d]=(a,e)=>new k(a,b(c,e,{method:d}));return a.HTTPError=f,a.TimeoutError=e,a.create=a=>h(b(a)),a.extend=a=>h(b(c,a)),a.stop=o,a};return h()})